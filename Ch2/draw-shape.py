import cv2 as cv
import numpy as np
#---------------------------------------------------------------------------------
#   (0,0)
#    ●────────────→ x (橫向，向右越大)
#    │
#    │
#    ↓
#    y (縱向，向下越大)
#---------------------------------------------------------------------------------



#在 OpenCV 中，顏色順序是 BGR 
blank = np.zeros((500, 500, 3), dtype='uint8') 
cv.rectangle(blank, (0,0),(100,100),(250,0,0), thickness=3)
# drawing rectangle 
# from top left corner (0,0) to bottom right corner (100,100)
# line color blue, line thickness is 3 pixels.
# 此為小格子

#cv.imshow('rectangle', blank)
#cv.waitKey(0)

# 1.畫大格子----------------------------------------------------------------------------
# cv.rectangle(blank, (10,20),(400,400),(250,0,0), thickness=1)
# pt1 第一個點座標 = (10, 20)：左上角的 起點座標（x=10, y=20）
# pt2 第二個點座標 = (400, 400)：右下角的 終點座標（x=400, y=400）
# 在 OpenCV 中，座標格式是 (x, y)，也就是：
# x 是水平方向（橫向）→ 控制「寬」
# y 是垂直方向（縱向）→ 控制「高」
#---------------------------------------------------------------------------------

# 2.另外一個方法 畫格子----------------------------------------------------------------------------
# cv.rectangle(blank, (10,20),(blank.shape[1]//2, blank.shape[0]//2), (0,0,255), thickness=3)
# blank.shape[1]//2, blank.shape[0]//2) --> 250（寬度一半）
# 假設 blank.shape = (500, 500, 3)，那結果是：
# (500 // 3, 500 // 3) = (166, 166) 圖像寬度的三分之一
#| ------------------------ | --------------------------------------- |
# 格式: 
# blank.shape = (rows, cols, channels)
#             = (高,    寬,    顏色)
#             = (y,     x,     BGR)
#| ------------------------ | --------------------------------------- |
#| `blank.shape[x]` | 意義  | 對應方向       | 說明 |
#| `blank.shape[0]` | 高度  | y 方向（垂直） | 從上到下數像素，有 500 行  |
#| `blank.shape[1]` | 寬度  | x 方向（水平） | 從左到右數像素，有 500 列  |
#| `blank.shape[2]` | 通道數 | -           | 有 3 個顏色通道（B、G、R） |
#| ------------------------ | --------------------------------------- |
#| `blank.shape[0]` 為什麼是 y？ | 因為 NumPy 中「第 0 維」代表「行數」，也就是圖像的「高度（上下）」。 |
#| `blank.shape[1]` 為什麼是 x ? | 代表圖像的「寬度（左右）」，也就是列數，是 x 方向。             |
#---------------------------------------------------------------------------------




# 3.原本單純畫線，現在要充滿顏色---------------------------------------------------------
# cv.rectangle(blank, (100,300),(300,500),(250,0,0), thickness=cv.FILLED)
# 以上案例為藍色實心。
# color: BGR 顏色 → (250, 0, 0) = 純藍色
# thickness=cv.FILLED: 代表實心矩形 
# 代表實心矩形ㄝ,也可用 thickness= -1 表達
#---------------------------------------------------------------------------------

# 4.原本單純劃線，想要變實心有顏色，但卻變成只有一條線 --------------------------------------
# cv.rectangle(blank, (100,300),(100,100),(250,0,0), thickness=cv.FILLED)
# pt1: x1 = 100, y1 = 300
# pt2: x2 = 100, y2 = 100
# 寬度 (width) = |x2 - x1| = |100 - 100| = 0
# 高度 (height) = |y2 - y1| = |300 - 100| = 200
# 畫出的是一個 寬度 = 0、高度 = 200 的區塊 --> 這就代表它只是一條 垂直線
#---------------------------------------------------------------------------------



# 5.畫圓形-----------------------------------------------------------------------------
# cv.circle(blank, (200,300),60,(250,0,0)) 
# 圓心座標，格式為 (x, y)，200 是 x 軸（橫向）→ 離左邊 200 ,300 是 y 軸（縱向）→ 離上邊 300 
# radius 半徑 60 
# 半徑為 60，圓的 邊界 是從 (200-60, 300-60) 到 (200+60, 300+60)
# 所以 X 範圍（橫向 / 左右）會是：
# 從 X = 200 - 60 = 140（圓的最左邊）
# 到 X = 200 + 60 = 260（圓的最右邊）
# Y 範圍（垂直 / 上下）會是：
# 從 Y = 300 - 60 = 240（圓的最上邊）
# 到 Y = 300 + 60 = 360（圓的最下邊）
# 直徑＝60*2=120
# 整個圓形會「佔據」圖像上的一塊 120×120 的區域,範圍是：
# 左上角點  = (140, 240) , 右下角點  = (260, 360)
# 畫出來的整個實體圓形所在的區塊。
#---------------------------------------------------------------------------------


# 6.另一種畫圓形--------------------------------------------------------------------------
# cv.circle(blank, (blank.shape[1]//2, blank.shape[0]//2), 40, (0, 0, 255), thickness=3)
# 格式：cv.circle(image, center, radius, color, thickness)
#---------------------------------------------------------------------------------------


# 7.畫線---------------------------------------------------------------------------------
# cv.line(blank, (280,250),(100,100),(250,0,0), thickness=3)
# 格式：cv.line(image, pt1, pt2, color, thickness)
#| ------------------------ | --------------------------------------- |
# (280, 250)：起點（Point 1）
# x = 280：橫向（從左往右）偏右的位置
# y = 250：縱向（從上往下）接近畫布中間
#| ------------------------ | --------------------------------------- |
# (100, 100)：終點（Point 2）
# x = 100：靠左
# y = 100：靠上
# 這是線的終點
#| ------------------------ | --------------------------------------- |
# 顯示結果：
#(100,100) o
#           \
#            \
#             \
#              o (280,250)
#| ------------------------ | --------------------------------------- |

# 運作方式：
# dx = abs(280 - 100) = 180    # x 的差距
# dy = abs(250 - 100) = 150    # y 的差距

# 看 「數值有沒有變大」：
# x 座標從 100 → 280
# 變大 → 所以是 往右 , sx = 1（x 每次加 1）
# y 座標從 100 → 250
# 變大 → 所以是 往下, sy = 1（y 每次加 1）

# 如果數值變小，就是往左或往上。
#---------------------------------------------------------------------------------------


# cv.imshow('Shapes with Labels', blank)
# 同時出現兩種圖案，但只需開啟一個視窗。
